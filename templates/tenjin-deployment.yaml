# templates/deployment.yaml

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-tenjin-te4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tenjin-te4
  template:
    metadata:
      labels:
        app: tenjin-te4
    spec:
      containers:
        - name: tenjin-core
          image: yethitech/tenjin-enterprise:latest
          ports:
            - containerPort: 8080
          readinessProbe:
            httpGet:
              path: /api/public/health
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          envFrom:
            - configMapRef:
                name: {{ .Release.Name }}-configmaptenjin
          volumeMounts:
            - name: tenjin-pv
              mountPath: /root
      volumes:
        - name: tenjin-pv
          persistentVolumeClaim:
            claimName: tenjin-pvc
      initContainers:   # Add an init container to wait for Elasticsearch and PostgreSQL
        - name: wait-for-dependencies
          image: busybox
          command:
            - "/bin/sh"
            - "-c"
            - |
              until nc -zv tenjin-elasticsearch 9200 && nc -zv tenjin-postgres 5432; do
                echo "Waiting for dependencies to be available..."
                sleep 5
              done



---
# PersistentVolume definition
apiVersion: v1
kind: PersistentVolume
metadata:
  name: tenjin-pv
spec:
  capacity:
    storage: {{ .Values.persistentVolume.size }}  # Example: 10Gi
  accessModes:
    - ReadWriteOnce
  storageClassName: {{ .Values.persistentVolume.storageClassName }}  # Example: standard
  hostPath:
    path: /root  # Change this if using another type of volume like NFS or AWS EBS

---
# Add PVC definition for PVC in the same file

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: tenjin-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.persistentVolume.size }}
  storageClassName: {{ .Values.persistentVolume.storageClassName }}