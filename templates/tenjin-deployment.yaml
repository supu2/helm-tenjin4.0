# templates/deployment.yaml
 
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-tenjin_core
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tenjin
  template:
    metadata:
      labels:
        app: tenjin
    spec:
      containers:
        - name: tenjin-core
          image: yethitech/tenjin-enterprise:latest
          ports:
            - containerPort: 8080
          envFrom:
            - configMapRef:
                name: {{ .Release.Name }}-configmaptenjin
          volumeMounts:
            - name: tenjin-pv
              mountPath: /backend
      volumes:
        - name: tenjin-pv
          persistentVolumeClaim:
            claimName: tenjin-pvc
      initContainers:   # Add an init container to wait for Elasticsearch and PostgreSQL
        - name: wait-for-dependencies
          image: busybox
          command:
            - "/bin/sh"
            - "-c"
            - |
              until nc -zv tenjin-elasticsearch 9200 && nc -zv tenjin-postgres 5432; do
                echo "Waiting for dependencies to be available..."
                sleep 5
              done
 
 
 
---
# PersistentVolume definition
apiVersion: v1
kind: PersistentVolume
metadata:
  name: tenjin-pv
spec:
  capacity:
    storage: {{ .Values.tenjin.persistence.size }}  # Example: 10Gi
  accessModes:
    - ReadWriteOnce
  storageClassName: {{ .Values.tenjin.persistence.storageClassName }}  # Example: standard
  hostPath:
    path: /backend
     # Change this if using another type of volume like NFS or AWS EBS
 
 
---
# Add PVC definition for PVC in the same file
 
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: tenjin-pvc
  annotations:
    "helm.sh/resource-policy": "keep"
 
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.tenjin.persistence.size }}
  storageClassName: {{ .Values.tenjin.persistence.storageClassName }}